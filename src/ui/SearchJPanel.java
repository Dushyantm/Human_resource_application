/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Employee;
import model.employeeHistory;

/**
 *
 * @author dumma
 */
public class SearchJPanel extends javax.swing.JPanel {

    employeeHistory history;

    /**
     * Creates new form SearchJPanel
     * @param history
     */
    public SearchJPanel(employeeHistory history) {
        initComponents();
        this.history = history;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        title = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jquery = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        searchTable = new javax.swing.JTable();

        setPreferredSize(new java.awt.Dimension(912, 463));

        title.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("Search Employee");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Employee ID", "Name", "Position Title", "Email address" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Sort By:");

        jquery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jqueryActionPerformed(evt);
            }
        });
        jquery.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jqueryKeyReleased(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        searchTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        searchTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Employee ID", "Level", "Position Title", "Cell Number", "Email ID", "Start Date"
            }
        ));
        searchTable.setColumnSelectionAllowed(true);
        jScrollPane2.setViewportView(searchTable);
        searchTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(166, 166, 166)
                        .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 588, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jquery, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)))
                .addContainerGap(158, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(37, 37, 37)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 837, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(38, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(title)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jquery, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(355, 355, 355))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(163, 163, 163)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(110, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jqueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jqueryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jqueryActionPerformed
    
    private int criteria = 0;
    private String query = "";
    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        criteria = jComboBox1.getSelectedIndex();
    }//GEN-LAST:event_jComboBox1ActionPerformed
    
    private void populateTable(List<Employee> templist) {
        
        DefaultTableModel model = (DefaultTableModel) searchTable.getModel();
        model.setRowCount(0);
        
        for(Employee emp:templist){
            Object[] row = new Object[7];
            row[0] = emp;
            row[1] = emp.getEmployeeId();
            row[2] = emp.getGender();
            row[3] = emp.getPositionTitle();
            row[4] = emp.getPhotoPath();
            row[5] = emp.getEmailId();
            row[6] = emp.getStartDate();

//            add remaining params

            model.addRow(row);
        }
                
        
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        query = jquery.getText();
        List<Employee> temp = new ArrayList();
        if(query.isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter text to search");
        }
        else{
            

            for (Employee emp:history.getHistory()){
                switch (criteria) {
                    case 0 -> {
                        if(String.valueOf(emp.getEmployeeId()).contains(query)){
                            temp.add(emp);
                        }
                    }
                    case 1 -> {
                        if(String.valueOf(emp.getName()).contains(query)){
                            temp.add(emp);
                        }
                    }
                    case 2 -> {
                        if(String.valueOf(emp.getPositionTitle()).contains(query)){
                            temp.add(emp);
                        }
                    }
                    case 3 -> {
                        if(String.valueOf(emp.getEmailId()).contains(query)){
                            temp.add(emp);
                        }
                    }
                    default -> {
                    }
                }
            populateTable(temp);
            }
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jqueryKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jqueryKeyReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jqueryKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jquery;
    private javax.swing.JTable searchTable;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
